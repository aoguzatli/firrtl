ram_opcode -> Connect( @[Decoupled.scala 242:21],SubField(SubField(Reference(ram_opcode,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(3)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(3))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),io_deq_bits_MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(3))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),UIntLiteral(1,IntWidth(1)))
ram_opcode -> Connect( @[Decoupled.scala 40:37],SubField(SubField(Reference(ram_opcode,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(3)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(3))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(3))), Field(mask,Default,UIntType(IntWidth(1))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),DoPrim(and,ArrayBuffer(Reference(io_enq_ready,UIntType(IntWidth(1)),PortKind,SourceFlow), Reference(io_enq_valid,UIntType(IntWidth(1)),PortKind,SourceFlow)),ArrayBuffer(),UIntType(IntWidth(1))))
ram_param -> Connect( @[Decoupled.scala 242:21],SubField(SubField(Reference(ram_param,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(3)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(3))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),io_deq_bits_MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(3))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),UIntLiteral(1,IntWidth(1)))
ram_param -> Connect( @[Decoupled.scala 40:37],SubField(SubField(Reference(ram_param,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(3)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(3))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(3))), Field(mask,Default,UIntType(IntWidth(1))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),DoPrim(and,ArrayBuffer(Reference(io_enq_ready,UIntType(IntWidth(1)),PortKind,SourceFlow), Reference(io_enq_valid,UIntType(IntWidth(1)),PortKind,SourceFlow)),ArrayBuffer(),UIntType(IntWidth(1))))
ram_size -> Connect( @[Decoupled.scala 242:21],SubField(SubField(Reference(ram_size,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(3)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(3))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),io_deq_bits_MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(3))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),UIntLiteral(1,IntWidth(1)))
ram_size -> Connect( @[Decoupled.scala 40:37],SubField(SubField(Reference(ram_size,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(3)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(3))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(3))), Field(mask,Default,UIntType(IntWidth(1))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),DoPrim(and,ArrayBuffer(Reference(io_enq_ready,UIntType(IntWidth(1)),PortKind,SourceFlow), Reference(io_enq_valid,UIntType(IntWidth(1)),PortKind,SourceFlow)),ArrayBuffer(),UIntType(IntWidth(1))))
ram_source -> Connect( @[Decoupled.scala 242:21],SubField(SubField(Reference(ram_source,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(6)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(6))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),io_deq_bits_MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(6))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),UIntLiteral(1,IntWidth(1)))
ram_source -> Connect( @[Decoupled.scala 40:37],SubField(SubField(Reference(ram_source,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(6)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(6))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(6))), Field(mask,Default,UIntType(IntWidth(1))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),DoPrim(and,ArrayBuffer(Reference(io_enq_ready,UIntType(IntWidth(1)),PortKind,SourceFlow), Reference(io_enq_valid,UIntType(IntWidth(1)),PortKind,SourceFlow)),ArrayBuffer(),UIntType(IntWidth(1))))
ram_address -> Connect( @[Decoupled.scala 242:21],SubField(SubField(Reference(ram_address,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(29)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(29))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),io_deq_bits_MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(29))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),UIntLiteral(1,IntWidth(1)))
ram_address -> Connect( @[Decoupled.scala 40:37],SubField(SubField(Reference(ram_address,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(29)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(29))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(29))), Field(mask,Default,UIntType(IntWidth(1))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),DoPrim(and,ArrayBuffer(Reference(io_enq_ready,UIntType(IntWidth(1)),PortKind,SourceFlow), Reference(io_enq_valid,UIntType(IntWidth(1)),PortKind,SourceFlow)),ArrayBuffer(),UIntType(IntWidth(1))))
ram_mask -> Connect( @[Decoupled.scala 242:21],SubField(SubField(Reference(ram_mask,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(8)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(8))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),io_deq_bits_MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(8))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),UIntLiteral(1,IntWidth(1)))
ram_mask -> Connect( @[Decoupled.scala 40:37],SubField(SubField(Reference(ram_mask,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(8)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(8))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(8))), Field(mask,Default,UIntType(IntWidth(1))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),DoPrim(and,ArrayBuffer(Reference(io_enq_ready,UIntType(IntWidth(1)),PortKind,SourceFlow), Reference(io_enq_valid,UIntType(IntWidth(1)),PortKind,SourceFlow)),ArrayBuffer(),UIntType(IntWidth(1))))
ram_data -> Connect( @[Decoupled.scala 242:21],SubField(SubField(Reference(ram_data,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(64)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(64))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),io_deq_bits_MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(64))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),UIntLiteral(1,IntWidth(1)))
ram_data -> Connect( @[Decoupled.scala 40:37],SubField(SubField(Reference(ram_data,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(64)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(64))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(64))), Field(mask,Default,UIntType(IntWidth(1))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),DoPrim(and,ArrayBuffer(Reference(io_enq_ready,UIntType(IntWidth(1)),PortKind,SourceFlow), Reference(io_enq_valid,UIntType(IntWidth(1)),PortKind,SourceFlow)),ArrayBuffer(),UIntType(IntWidth(1))))
ram_corrupt -> Connect( @[Decoupled.scala 242:21],SubField(SubField(Reference(ram_corrupt,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(1)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(1))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),io_deq_bits_MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(1))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),UIntLiteral(1,IntWidth(1)))
ram_corrupt -> Connect( @[Decoupled.scala 40:37],SubField(SubField(Reference(ram_corrupt,BundleType(ArrayBuffer(Field(io_deq_bits_MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Flip,UIntType(IntWidth(1)))))), Field(MPORT,Flip,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(1))), Field(mask,Default,UIntType(IntWidth(1)))))))),MemKind,SourceFlow),MPORT,BundleType(List(Field(addr,Default,UIntType(IntWidth(1))), Field(en,Default,UIntType(IntWidth(1))), Field(clk,Default,ClockType), Field(data,Default,UIntType(IntWidth(1))), Field(mask,Default,UIntType(IntWidth(1))))),SinkFlow),en,UIntType(IntWidth(1)),SinkFlow),DoPrim(and,ArrayBuffer(Reference(io_enq_ready,UIntType(IntWidth(1)),PortKind,SourceFlow), Reference(io_enq_valid,UIntType(IntWidth(1)),PortKind,SourceFlow)),ArrayBuffer(),UIntType(IntWidth(1))))
